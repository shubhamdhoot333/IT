oops in javascript


1.class
In JavaScript, classes are the special type of functions. We can define the class just like function declarations and function expressions.
The JavaScript class contains various class members within a body including methods or constructor. The class is executed in strict mode. 
So, the code containing the silent error or mistake throws an error.

The class syntax contains two components:
1.Class declarations
2.Class expressions

Class Declarations
A class can be defined by using a class declaration. A class keyword is used to declare a class with any particular name. 
According to JavaScript naming conventions, the name of the class always starts with an uppercase letter.

example
<script>  
//Declaring class  
class Employee  
  {  
//Initializing an object  
    constructor(id,name)  
    {  
      this.id=id;  
      this.name=name;  
    }  
//Declaring method  
    detail()  
    {  
  document.writeln(this.id+" "+this.name+"<br>")  
    }  
  }  
//passing object to a variable   
var e1=new Employee(101,"Martin Roy");  
var e2=new Employee(102,"Duke William");  
e1.detail(); //calling method  
e2.detail();  
</script>  


Class expressions

Another way to define a class is by using a class expression. Here, it is not mandatory to assign the name of the class. So, the class expression can be named or unnamed.
 The class expression allows us to fetch the class name. However, this will not be possible with class declaration.

Unnamed Class Expression
The class can be expressed without assigning any name to it.

Let's see an example.

<script>  
var emp = class {  
  constructor(id, name) {  
    this.id = id;  
    this.name = name;  
  }  
};  
document.writeln(emp.name);  
</script>  

